// ======= Assignment 5 - Object ========== //

var userA = {
  id: 123456,
  name: "Peter Parker",
  email: "peter.parker@gmail.com",
  role: "student",
  courseId: 112233,
};

// Log to the console the number of key/value pairs in the object
function noOfKeyValuePairs(object) {
  console.log(Object.keys(object).length);
}
// noOfKeyValuePairs(userA);

// Check the type of the value of the key 'id' and 'courseId'
function checkValueType() {
  console.log(typeof userA.id);
  console.log(typeof userA.courseId);
}
// checkValueType();

// Change the value of the key 'email' to pparker@gmail.com
function changeValueOfKeyEmail() {
  userA.email = "pparker@gmail.com";
  console.log(userA.email);
}
// changeValueOfKeyEmail();

// create function that greet the user object
function greeting(user) {
  console.log(`Hi, my name is ${user.name}, my email is ${user.email}`);
}
// greeting(userA);

// Nested Object
// Add a list of tasks to the object
var status = ["Done", "In Progress", "Not Started"];
function randStatus(arr) {
  // generate random index number
  index = Math.floor(Math.random() * arr.length);
  // return the random element in array
  return arr[index];
}

function addListOfTasks() {
  // create new key tasks with its value containing an array of task lists
  var tasks = [];
  // use for loop to generate 10 task lists, each list is an object
  for (let i = 1; i <= 10; i++) {
    // a list object consists of 2 key/value pairs: 'name' and 'status'
    // key 'name' has value run from "Task 1" to "Task 10"
    // key 'status' has value randomly generated by randStatus() function
    tasklistObject = { name: `Task ${i}`, status: `${randStatus(status)}` };
    // push each task list object in 'tasks' array
    tasks.push(tasklistObject);
  }
  // add new key 'tasks' with its array value to the 'userA' object
  userA.tasks = tasks;
}
addListOfTasks();
// console.log(userA);

// Make 3 lists of tasks: "Not Started", "In Progress", "Done"
function listOfTask() {
  // Create 3 empty lists
  var notStarted = [];
  var inProgress = [];
  var done = [];
  // Sorting the tasks based on their status
  for (let i = 0; i < userA.tasks.length; i++) {
    if (userA.tasks[i].status === "Not Started") {
      // put "Not Started" status tasks in "Not Started" list
      notStarted.push(userA.tasks[i].name);
    } else if (userA.tasks[i].status === "In Progress") {
      // put "In Progress" status tasks in "In Progress" list
      inProgress.push(userA.tasks[i].name);
    } else if (userA.tasks[i].status === "Done") {
      // put "Done" status tasks in "Done" list
      done.push(userA.tasks[i].name);
    }
  }
  // print 3 lists out to the console
  console.log(`Not Started: ${notStarted}`);
  console.log(`In Progress: ${inProgress}`);
  console.log(`Done: ${done}`);
}
// listOfTask();

// Test your code
// This function works the same as function addListOfTasks() does
function generateFakeTasks(num) {
  var tasks = [];
  for (let i = 1; i <= num; i++) {
    tasks.push({ name: `Task ${i}`, status: randStatus(status) });
  }
  console.log(tasks);
}
generateFakeTasks(5);
